/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package nl.derf.HelloRedis;

/*
Notes for using with Learn:

- Just specify path to bb-config.properties as cmd line arg
- Timestamp logging to stdout
 */

import redis.clients.jedis.Jedis;
import redis.clients.jedis.exceptions.JedisException;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

public class App {
  private static final String PREFIX = "1793091408";

  private static List<RedisDumpedKeyValue> dump(String server, int port) {
    List<RedisDumpedKeyValue> redisDumpedKeyValues = new ArrayList<>();

    try {
      Jedis jedis = new Jedis(server, port);

      Set<String> matchingKeys = jedis.keys(PREFIX + "*");
      if (matchingKeys.size() == 0) {
        System.err.println("No keys found for prefix " + PREFIX);
        System.exit(1);
      }

      System.out.println("Found " + matchingKeys.size() + " keys");
      for (String key : matchingKeys) {
        redisDumpedKeyValues.add(new RedisDumpedKeyValue(key, jedis.dump(key)));
      }

      return redisDumpedKeyValues;
    } catch (JedisException je) {
      System.err.println("Redis error exporting from server: " + je);
      System.exit(1);
    }

    return redisDumpedKeyValues;
  }

  private static void restore(String server, int port, List<RedisDumpedKeyValue> redisDumpedKeyValues) {
    Jedis jedis = new Jedis(server, port);

    try {
      for (RedisDumpedKeyValue redisDumpedKeyValue : redisDumpedKeyValues) {
        jedis.restore(redisDumpedKeyValue.getKey(), 0, redisDumpedKeyValue.getValue());
      }
      System.out.println("Successfully streamed " + redisDumpedKeyValues.size()+ " keys to " + server);
    } catch (JedisException je) {
      System.err.println("Redis error sending to server: " + je);
      System.exit(1);
    }
  }

  private static String getServerFromArg(String arg) {
    return arg.split(":")[0];
  }

  private static int getPortFromArgs(String arg) {
    return arg.split(":").length == 2 ? Integer.parseInt(arg.split(":")[1]) : 6379;
  }

  public static void main(String[] args) {
    if (args.length != 2) {
      System.err.println("Usage: HelloRedis server1:port server2:port");
      System.exit(1);
    }

    String sourceServer = getServerFromArg(args[0]);
    int sourcePort = getPortFromArgs(args[0]);
    String destServer = getServerFromArg(args[1]);
    int destPort = getPortFromArgs(args[1]);

    List<RedisDumpedKeyValue> dataFromSource = dump(sourceServer, sourcePort);
    restore(destServer, destPort, dataFromSource);
  }
}
