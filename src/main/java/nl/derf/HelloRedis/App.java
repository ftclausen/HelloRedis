/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package nl.derf.HelloRedis;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import redis.clients.jedis.Jedis;
import redis.clients.jedis.exceptions.JedisException;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.Set;

public class App {
    private static final ObjectMapper MAPPER = new ObjectMapper();
    private static final String PREFIX = "253438719";

    public static void main(String[] args) throws IOException  {
        MAPPER.enable(SerializationFeature.INDENT_OUTPUT);
        Jedis jedis = new Jedis("localhost");

        try {
            Set<String> matchingKeys = jedis.keys(PREFIX + "*");
            if (matchingKeys.size() == 0) {
                System.err.println("No keys found for prefix " + PREFIX);
            }

            RedisDumpedKeyValue[] dumpedKeyValues = new RedisDumpedKeyValue[matchingKeys.size()];

            int index = 0;
            for (String key: matchingKeys) {
                dumpedKeyValues[index] = new RedisDumpedKeyValue(key, jedis.dump(key));
                index += 1;
            }

            MAPPER.writeValue(new File("/tmp/test.json"), dumpedKeyValues);
            System.out.println("Wrote JSON file to /tmp/test.json");

            // Restore

            RedisDumpedKeyValue[] deserialised = MAPPER.readValue(new File("/tmp/test.json"), RedisDumpedKeyValue[].class);

            if (Arrays.equals(dumpedKeyValues, deserialised)) {
                System.out.println("OK, restored values are the same as saved values");
            } else {
                System.err.println(("ERROR: round trip failed: restored data not the same as saved data"));
            }

            for(RedisDumpedKeyValue redisDumpedKeyValue: deserialised) {
                jedis.restore("RESTORED_" + redisDumpedKeyValue.getKey(), 0, redisDumpedKeyValue.getValue());
            }
        } catch (JedisException je) {
            System.out.println("Redis error: " + je);
        }
    }
}
